"
 torch. set_default_tensor_type ( t ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.tensor([1.2,3]).dtype', 'torch.set_default_tensor_type(torch.DoubleTensor)', '']","Traceback (most recent call last):
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 13, in json_serialize
    json.dumps(v)
  File ""/usr/lib/python3.8/json/__init__.py"", line 231, in dumps
    return _default_encoder.encode(obj)
  File ""/usr/lib/python3.8/json/encoder.py"", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File ""/usr/lib/python3.8/json/encoder.py"", line 257, in iterencode
    return _iterencode(o, 0)
  File ""/usr/lib/python3.8/json/encoder.py"", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type tensortype is not JSON serializable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 56, in get_var_shape
    return list(s)  # convert torch.Size to list
TypeError: 'getset_descriptor' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    torch.set_default_tensor_type(torch.DoubleTensor)
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 102, in wrapper
    param_dict = build_param_dict(*args, **kwargs)
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 42, in build_param_dict
    param_dict['parameter:%d' % ind] = json_serialize(arg)
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 17, in json_serialize
    return get_var_signature(
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 88, in get_var_signature
    s['shape'] = get_var_shape(var)
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 58, in get_var_shape
    print(e.message)
AttributeError: 'TypeError' object has no attribute 'message'
"
"
 torch. asarray ( obj ,  * ,  dtype ,  device ,  copy ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', '', 'a=torch.tensor([1,2,3])', 'b=torch.asarray(a)', 'a.data_ptr()==b.data_ptr()', 'c=torch.asarray(a,copy=True)', 'a=torch.tensor([1,2,3],requires_grad=True).float()', 'c=torch.asarray(b)', 'd=torch.asarray(b,requires_grad=True)', 'array=numpy.array([1,2,3])', 't1=torch.asarray(array)', ""array.__array_interface__['data'][0]==t1.data_ptr()"", 't2=torch.asarray(array,dtype=torch.float32)', ""array.__array_interface__['data'][0]==t1.data_ptr()"", '']","Traceback (most recent call last):
  File ""example.py"", line 6, in <module>
    b=torch.asarray(a)
AttributeError: module 'torch' has no attribute 'asarray'
"
"
 torch. frombuffer ( buffer ,  * ,  dtype ,  count ,  offset ,  requires_grad )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'import array', ""a=array.array('i',[1,2,3])"", 't=torch.frombuffer(a,dtype=torch.int32)', '', 'import array', ""a=array.array('b',[-1,0,0,0])"", 'torch.frombuffer(a,dtype=torch.int32)', '']","Traceback (most recent call last):
  File ""example.py"", line 6, in <module>
    t=torch.frombuffer(a,dtype=torch.int32)
AttributeError: module 'torch' has no attribute 'frombuffer'
"
"
 torch. range ( start=0 ,  end ,  step=1 ,  * ,  out=None ,  dtype=None ,  layout=torch.strided ,  device=None ,  requires_grad=False )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.range(1,4)', 'torch.range(1,4,0.5)']","/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py:99: UserWarning: torch.range is deprecated and will be removed in a future release because its behavior is inconsistent with Python's range builtin. Instead, use torch.arange, which produces values in [start, end).
  outputs = func(*args, **kwargs)
"
"
 torch. argwhere ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.tensor([1,0,1])', 'torch.argwhere(t)', 't=torch.tensor([[1,0,1],[0,1,1]])', 'torch.argwhere(t)', '']","Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    torch.argwhere(t)
AttributeError: module 'torch' has no attribute 'argwhere'
"
"
 torch. conj ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([-1+1j,-2+2j,3-3j])', 'x.is_conj()', 'y=torch.conj(x)', 'y.is_conj()', '']","Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    x.is_conj()
AttributeError: 'Tensor' object has no attribute 'is_conj'
"
"
 Tensor. index_add_ ( dim ,  index ,  source ,  * ,  alpha )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.ones(5,3)', 't=torch.tensor([[1,2,3],[4,5,6],[7,8,9]],dtype=torch.float)', 'index=torch.tensor([0,4,2])', 'x.index_add_(0,index,t)', 'x.index_add_(0,index,t,alpha=-1)', '', '']","Traceback (most recent call last):
  File ""example.py"", line 8, in <module>
    x.index_add_(0,index,t,alpha=-1)
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
TypeError: index_add_() got an unexpected keyword argument 'alpha'
"
"
 Tensor. index_reduce_ ( dim ,  index ,  source ,  reduce ,  * ,  include_self )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.empty(5,3).fill_(2)', 't=torch.tensor([[1,2,3],[4,5,6],[7,8,9],[10,11,12]],dtype=torch.float)', 'index=torch.tensor([0,4,2,0])', ""x.index_reduce_(0,index,t,'prod')"", '', 'x=torch.empty(5,3).fill_(2)', ""x.index_reduce_(0,index,t,'prod',include_self=False)"", '', '', '']","Traceback (most recent call last):
  File ""example.py"", line 7, in <module>
    x.index_reduce_(0,index,t,'prod')
AttributeError: 'Tensor' object has no attribute 'index_reduce_'
"
"
 torch. select_scatter ( input ,  src ,  dim ,  index )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.zeros(2,2)', 'b=torch.ones(2)', 'a.select_scatter(b,0,0)', '', '']","Traceback (most recent call last):
  File ""example.py"", line 6, in <module>
    a.select_scatter(b,0,0)
AttributeError: 'Tensor' object has no attribute 'select_scatter'
"
"
 torch. slice_scatter ( input ,  src ,  dim ,  start ,  end ,  step )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.zeros(8,8)', 'b=torch.ones(8)', 'a.slice_scatter(b,start=6)', '', 'b=torch.ones(2)', 'a.slice_scatter(b,dim=1,start=2,end=6,step=2)', '', '', '']","Traceback (most recent call last):
  File ""example.py"", line 6, in <module>
    a.slice_scatter(b,start=6)
AttributeError: 'Tensor' object has no attribute 'slice_scatter'
"
"
 Tensor. scatter_reduce_ ( dim ,  index ,  src ,  reduce ,  * ,  include_self )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'src=torch.tensor([1.,2.,3.,4.,5.,6.])', 'index=torch.tensor([0,1,0,1,2,1])', 'input1=torch.tensor([1.,2.,3.,4.])', 'input1.scatter_reduce(0,index,src,reduce=""sum"")', '', 'input1.scatter_reduce(0,index,src,reduce=""sum"",include_self=False)', '', 'input2=torch.tensor([5.,4.,3.,2.])', 'input2.scatter_reduce(0,index,src,reduce=""amax"")', '', 'input2.scatter_reduce(0,index,src,reduce=""amax"",include_self=False)', '']","Traceback (most recent call last):
  File ""example.py"", line 7, in <module>
    input1.scatter_reduce(0,index,src,reduce=""sum"")
AttributeError: 'Tensor' object has no attribute 'scatter_reduce'
"
"
 torch. take_along_dim ( input ,  indices ,  dim ,  * ,  out )   → ¶","['', 'import numpy as np', 'import numpy', 'import torch', 't=torch.tensor([[10,30,20],[60,40,50]])', 'max_idx=torch.argmax(t)', 'torch.take_along_dim(t,max_idx)', '', 'sorted_idx=torch.argsort(t,dim=1)', 'torch.take_along_dim(t,sorted_idx,dim=1)', '', '']","Traceback (most recent call last):
  File ""example.py"", line 7, in <module>
    torch.take_along_dim(t,max_idx)
AttributeError: module 'torch' has no attribute 'take_along_dim'
"
"
 torch. clamp ( input ,  min ,  max ,  * ,  out )   → ¶","['', 'import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', '', 'torch.clamp(a,min=-0.5,max=0.5)', 'min=torch.linspace(-1,1,steps=4)', 'torch.clamp(a,min=min)', '']","Traceback (most recent call last):
  File ""example.py"", line 9, in <module>
    torch.clamp(a,min=min)
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
TypeError: clamp(): argument 'min' must be Number, not Tensor
"
"
 torch. conj_physical ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.conj_physical(torch.tensor([-1+1j,-2+2j,3-3j]))', '']","Traceback (most recent call last):
  File ""example.py"", line 4, in <module>
    torch.conj_physical(torch.tensor([-1+1j,-2+2j,3-3j]))
AttributeError: module 'torch' has no attribute 'conj_physical'
"
"
 torch. exp ( input ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.exp(torch.tensor([0,math.log(2.)]))', '', '']","Traceback (most recent call last):
  File ""example.py"", line 4, in <module>
    torch.exp(torch.tensor([0,math.log(2.)]))
NameError: name 'math' is not defined
"
"
 torch. fake_quantize_per_channel_affine ( input ,  scale ,  zero_point ,  quant_min ,  quant_max )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.randn(2,2,2)', '', 'scales=(torch.randn(2)+1)*0.05', '', 'zero_points=torch.zeros(2).to(torch.int32)', '', 'torch.fake_quantize_per_channel_affine(x,scales,zero_points,1,0,255)', '']","Traceback (most recent call last):
  File ""example.py"", line 10, in <module>
    torch.fake_quantize_per_channel_affine(x,scales,zero_points,1,0,255)
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
RuntimeError: Zero-point must be Long, found Int
"
"
 torch. frexp ( input ,  * ,  out=None) ,  Tensor ) ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.arange(9.)', 'mantissa,exponent=torch.frexp(x)', 'torch.ldexp(mantissa,exponent)', '']","Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    mantissa,exponent=torch.frexp(x)
AttributeError: module 'torch' has no attribute 'frexp'
"
"
 torch. positive ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 't=torch.randn(5)', '', 'torch.positive(t)', '', '']","Traceback (most recent call last):
  File ""example.py"", line 6, in <module>
    torch.positive(t)
AttributeError: module 'torch' has no attribute 'positive'
"
"
 torch. pow ( input ,  exponent ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(4)', '', 'tensor([ 0.4331,  1.2475,  0.6834, -0.2791])', 'torch.pow(a,2)', 'tensor([ 0.1875,  1.5561,  0.4670,  0.0779])', 'exp=torch.arange(1.,5.)a=torch.arange(1.,5.)', '', 'torch.pow(a,exp)', '', '']","  File ""example.py"", line 9
    exp=torch.arange(1.,5.)a=torch.arange(1.,5.)
                           ^
SyntaxError: invalid syntax
"
"
 torch. round ( input ,  * ,  decimals ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.round(torch.tensor((4.7,-2.3,9.1,-7.7)))', '# Values equidistant from two integers are rounded towards the', '#   the nearest even value (zero is treated as even)', 'torch.round(torch.tensor([-0.5,0.5,1.5,2.5]))', '# A positive decimals argument rounds to the to that decimal place', 'torch.round(torch.tensor([0.1234567]),decimals=3)', '# A negative decimals argument rounds to the left of the decimal', 'torch.round(torch.tensor([1200.1234567]),decimals=-3)', '', '', '']","Traceback (most recent call last):
  File ""example.py"", line 9, in <module>
    torch.round(torch.tensor([0.1234567]),decimals=3)
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
TypeError: round() got an unexpected keyword argument 'decimals'
"
"
 torch. aminmax ( input ,  * ,  dim=None ,  keepdim=False ,  out=None) ,  Tensor ) ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.aminmax(torch.tensor([1,-3,5]))', '']","Traceback (most recent call last):
  File ""example.py"", line 4, in <module>
    torch.aminmax(torch.tensor([1,-3,5]))
AttributeError: module 'torch' has no attribute 'aminmax'
"
"
 torch. nanmean ( input ,  dim ,  keepdim ,  * ,  dtype ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[torch.nan,1,2],[1,2,3]])', 'x.mean()', '', 'x.nanmean()', '', 'x.mean(dim=0)', '', 'x.nanmean(dim=0)', '', 'torch.tensor([torch.nan]).nanmean()', '']","Traceback (most recent call last):
  File ""example.py"", line 4, in <module>
    x=torch.tensor([[torch.nan,1,2],[1,2,3]])
AttributeError: module 'torch' has no attribute 'nan'
"
"
 torch. quantile ( input ,  q ,  dim ,  keepdim ,  * ,  interpolation ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(2,3)', '', 'q=torch.tensor([0.25,0.5,0.75])', 'torch.quantile(a,q,dim=1,keepdim=True)', '', 'torch.quantile(a,q,dim=1,keepdim=True).shape', 'torch.Size([3, 2, 1])', 'a=torch.arange(4.)', '', ""torch.quantile(a,0.6,interpolation='linear')"", '', ""torch.quantile(a,0.6,interpolation='lower')"", '', ""torch.quantile(a,0.6,interpolation='higher')"", '', ""torch.quantile(a,0.6,interpolation='midpoint')"", '', ""torch.quantile(a,0.6,interpolation='nearest')"", '', ""torch.quantile(a,0.4,interpolation='nearest')"", '', '']","Traceback (most recent call last):
  File ""example.py"", line 13, in <module>
    torch.quantile(a,0.6,interpolation='linear')
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
TypeError: quantile() received an invalid combination of arguments - got (Tensor, float, interpolation=str), but expected one of:
 * (Tensor input, Tensor q, int dim, bool keepdim, *, Tensor out)
 * (Tensor input, float q, int dim, bool keepdim, *, Tensor out)

"
"
 torch. corrcoef ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([[0,1,2],[2,1,0]])', 'torch.corrcoef(x)', '', 'x=torch.randn(2,4)', '', 'torch.corrcoef(x)', '', 'torch.corrcoef(x[0])', '']","Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    torch.corrcoef(x)
AttributeError: module 'torch' has no attribute 'corrcoef'
"
"
 torch. rot90 ( input ,  k ,  dims )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.arange(4).view(2,2)', '', 'torch.rot90(x,1,[0,1])', 'tensor([[1, 3],', 'x=torch.arange(8).view(2,2,2)', '', 'torch.rot90(x,1,[1,2])', '']","  File ""example.py"", line 8
    x=torch.arange(8).view(2,2,2)
     ^
SyntaxError: invalid syntax
"
"
 torch. histogram ( input ,  bins ,  * ,  range ,  weight ,  density ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.histogram(torch.tensor([1.,2,1]),bins=4,range=(0.,3.),weight=torch.tensor([1.,2.,4.]))', '', 'torch.histogram(torch.tensor([1.,2,1]),bins=4,range=(0.,3.),weight=torch.tensor([1.,2.,4.]),density=True)', '', '']","Traceback (most recent call last):
  File ""example.py"", line 4, in <module>
    torch.histogram(torch.tensor([1.,2,1]),bins=4,range=(0.,3.),weight=torch.tensor([1.,2.,4.]))
AttributeError: module 'torch' has no attribute 'histogram'
"
"
 torch. meshgrid ( * ,  indexing ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3])', 'y=torch.tensor([4,5,6])', '', ""grid_x,grid_y=torch.meshgrid(x,y,indexing='ij')"", '', '', 'torch.equal(torch.cat(tuple(torch.dstack([grid_x,grid_y]))),torch.cartesian_prod(x,y))', '', 'xs=torch.linspace(-5,5,steps=100)', 'ys=torch.linspace(-5,5,steps=100)', ""x,y=torch.meshgrid(xs,ys,indexing='xy')"", 'z=torch.sin(torch.sqrt(x*x+y*y))', '', '']","Traceback (most recent call last):
  File ""example.py"", line 7, in <module>
    grid_x,grid_y=torch.meshgrid(x,y,indexing='ij')
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
TypeError: meshgrid() got an unexpected keyword argument 'indexing'
"
"
 torch. repeat_interleave ( input ,  repeats ,  dim ,  * ,  output_size )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3])', 'x.repeat_interleave(2)', '', 'y=torch.tensor([[1,2],[3,4]])', 'torch.repeat_interleave(y,2)', '', 'torch.repeat_interleave(y,3,dim=1)', '', 'torch.repeat_interleave(y,torch.tensor([1,2]),dim=0)', '', 'torch.repeat_interleave(y,torch.tensor([1,2]),dim=0,output_size=3)', '', '', '']","Traceback (most recent call last):
  File ""example.py"", line 14, in <module>
    torch.repeat_interleave(y,torch.tensor([1,2]),dim=0,output_size=3)
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
TypeError: repeat_interleave() received an invalid combination of arguments - got (Tensor, Tensor, output_size=int, dim=int), but expected one of:
 * (Tensor input, Tensor repeats, int dim)
 * (Tensor input, int repeats, int dim)
 * (Tensor repeats)

"
"
 torch. searchsorted ( sorted_sequence ,  values ,  * ,  out_int32 ,  right ,  side ,  out ,  sorter )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'sorted_sequence=torch.tensor([[1,3,5,7,9],[2,4,6,8,10]])', 'sorted_sequence', '', 'values=torch.tensor([[3,6,9],[3,6,9]])', '', 'torch.searchsorted(sorted_sequence,values)', '', ""torch.searchsorted(sorted_sequence,values,side='right')"", '', 'sorted_sequence_1d=torch.tensor([1,3,5,7,9])', '', 'torch.searchsorted(sorted_sequence_1d,values)', '']","Traceback (most recent call last):
  File ""example.py"", line 11, in <module>
    torch.searchsorted(sorted_sequence,values,side='right')
  File ""/home/nimashiri/.local/lib/python3.8/site-packages/torch/decorate_func.py"", line 99, in wrapper
    outputs = func(*args, **kwargs)
TypeError: searchsorted() received an invalid combination of arguments - got (Tensor, Tensor, side=str), but expected one of:
 * (Tensor sorted_sequence, Tensor input, *, bool out_int32, bool right, Tensor out)
 * (Tensor sorted_sequence, Number self, *, bool out_int32, bool right)

"
"
 torch. resolve_conj ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([-1+1j,-2+2j,3-3j])', 'y=x.conj()', 'y.is_conj()', '', 'z=y.resolve_conj()', '', 'z.is_conj()', '']","Traceback (most recent call last):
  File ""example.py"", line 6, in <module>
    y.is_conj()
AttributeError: 'Tensor' object has no attribute 'is_conj'
"
"
 torch. resolve_neg ( input )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([-1+1j,-2+2j,3-3j])', 'y=x.conj()', 'z=y.imag', 'z.is_neg()', '', 'out=y.resolve_neg()', '', 'out.is_neg()', '', '']","Traceback (most recent call last):
  File ""example.py"", line 7, in <module>
    z.is_neg()
AttributeError: 'Tensor' object has no attribute 'is_neg'
"
"
 torch. cholesky ( input ,  upper ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(3,3)', 'a=a@a.mT+1e-3', 'l=torch.cholesky(a)', '', 'a=torch.randn(3,2,2)', 'a=a@a.mT+1e-03', 'l=torch.cholesky(a)', 'z=l@l.mT', 'torch.dist(z,a)', '']","Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    a=a@a.mT+1e-3
AttributeError: 'Tensor' object has no attribute 'mT'
"
"
 torch. cholesky_inverse ( input ,  upper ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(3,3)', 'a=torch.mm(a,a.t())+1e-05*torch.eye(3)# make symmetric positive definite', 'u=torch.linalg.cholesky(a)', '', 'torch.cholesky_inverse(u)', '', 'a.inverse()', '', 'a=torch.randn(3,2,2', 'a=a@a.mT+1e-03', 'l=torch.linalg.cholesky(a)', 'z=l@l.mT', 'torch.dist(z,a)', '', '']","  File ""example.py"", line 13
    a=a@a.mT+1e-03
    ^
SyntaxError: invalid syntax
"
"
 torch. inner ( input ,  other ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', '', 'torch.inner(torch.tensor([1,2,3]),torch.tensor([0,2,1]))', '', 'a=torch.randn(2,3)', '', 'b=torch.randn(2,4,3)', '', 'torch.inner(a,b)', '', 'Torch.inner(a,torch.tensor(2))', '', '']","Traceback (most recent call last):
  File ""example.py"", line 13, in <module>
    Torch.inner(a,torch.tensor(2))
NameError: name 'Torch' is not defined
"
"
 torch. lu_solve ( b ,  LU_data ,  LU_pivots ,  * ,  out )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.randn(2,3,3)', 'b=torch.randn(2,3,1)', 'LU,pivots=torch.linalg.lu_factor(A)', 'x=torch.lu_solve(b,LU,pivots)', 'torch.dist(A@x,b)', '', '']","Traceback (most recent call last):
  File ""example.py"", line 6, in <module>
    LU,pivots=torch.linalg.lu_factor(A)
AttributeError: module 'torch.linalg' has no attribute 'lu_factor'
"
"
 torch.linalg. matrix_exp ( A )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'A=torch.empty(2,2,2)', 'A[0,:,:]=torch.eye(2,2)', 'A[1,:,:]=2*torch.eye(2,2)', '', 'torch.linalg.matrix_exp(A)', '', 'import math', 'A=torch.tensor([[0,math.pi/3],[-math.pi/3,0]])', 'torch.linalg.matrix_exp(A)', '']","Traceback (most recent call last):
  File ""example.py"", line 8, in <module>
    torch.linalg.matrix_exp(A)
AttributeError: module 'torch.linalg' has no attribute 'matrix_exp'
"
"
 torch. qr ( input ,  some ,  * ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.tensor([[12.,-51,4],[6,167,-68],[-4,24,-41]])', 'q,r=torch.qr(a)', '', 'torch.mm(q,r).round()', '', 'torch.mm(q.t(),q).round()', '', 'a=torch.randn(3,4,5)', 'q,r=torch.qr(a,some=False)', 'torch.allclose(torch.matmul(q,r),a)', '', 'torch.allclose(torch.matmul(q.mT,q),torch.eye(5))', '']","Traceback (most recent call last):
  File ""example.py"", line 15, in <module>
    torch.allclose(torch.matmul(q.mT,q),torch.eye(5))
AttributeError: 'Tensor' object has no attribute 'mT'
"
"
 torch. svd ( input ,  some ,  compute_uv ,  * ,  out ) ¶","['import numpy as np', 'import numpy', 'import torch', 'a=torch.randn(5,3)', '', 'u,s,v=torch.svd(a)', '', 'torch.dist(a,torch.mm(torch.mm(u,torch.diag(s)),v.t()))', '', 'a_big=torch.randn(7,5,3)', 'u,s,v=torch.svd(a_big)', 'torch.dist(a_big,torch.matmul(torch.matmul(u,torch.diag_embed(s)),v.mT))']","Traceback (most recent call last):
  File ""example.py"", line 12, in <module>
    torch.dist(a_big,torch.matmul(torch.matmul(u,torch.diag_embed(s)),v.mT))
AttributeError: 'Tensor' object has no attribute 'mT'
"
"
 torch. use_deterministic_algorithms ( mode ,  * ,  warn_only ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'torch.use_deterministic_algorithms(True)', ""torch.randn(10,device='cuda').kthvalue(0)""]","[W Context.cpp:69] Warning: torch.use_deterministic_algorithms is in beta, and its design and functionality may change in the future. (function operator())
Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    torch.randn(10,device='cuda').kthvalue(0)
RuntimeError: kthvalue CUDA does not have a deterministic implementation, but you set 'torch.use_deterministic_algorithms(True)'. You can turn off determinism just for this operation if that's acceptable for your application. You can also file an issue at https://github.com/pytorch/pytorch/issues to help us prioritize adding deterministic support for this operation.
"
"
 class torch.nn. DataParallel ( module ,  device_ids ,  output_device ,  dim ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'net=torch.nn.DataParallel(model,device_ids=[0,1,2])', 'output=net(input_var)', '']","Traceback (most recent call last):
  File ""example.py"", line 4, in <module>
    net=torch.nn.DataParallel(model,device_ids=[0,1,2])
NameError: name 'model' is not defined
"
"
 torch.nn.utils. skip_init ( module_cls ,  * ,  ** ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', '', 'm=torch.nn.utils.skip_init(torch.nn.Linear,5,1)', '', 'm2=torch.nn.utils.skip_init(torch.nn.Linear,in_features=6,out_features=1)', '', '', '']","Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    m=torch.nn.utils.skip_init(torch.nn.Linear,5,1)
AttributeError: module 'torch.nn.utils' has no attribute 'skip_init'
"
"
 torch.nn.utils.parametrizations. orthogonal ( module ,  name ,  orthogonal_map ,  * ,  use_trivialization ) [source] ¶","['', 'import numpy as np', 'import numpy', 'import torch', 'import torch.nn.functional as F', '', 'orth_linear=F.parametrizations(F.Linear(20,40))', '', 'Q=orth_linear.weight', 'torch.dist(Q.T@Q,torch.eye(20))', '', '']","Traceback (most recent call last):
  File ""example.py"", line 7, in <module>
    orth_linear=F.parametrizations(F.Linear(20,40))
AttributeError: module 'torch.nn.functional' has no attribute 'parametrizations'
"
"
 torch.nn.utils.parametrizations. spectral_norm ( module ,  name ,  n_power_iterations ,  eps ,  dim ) [source] ¶","['import numpy as np', 'import numpy', 'import torch', 'from torch import nn', 'snm=nn.utils.spectral_norm(nn.Linear(20,40))', '', 'torch.linalg.matrix_norm(snm.weight,2)']","Traceback (most recent call last):
  File ""example.py"", line 7, in <module>
    torch.linalg.matrix_norm(snm.weight,2)
AttributeError: module 'torch.linalg' has no attribute 'matrix_norm'
"
"
 Tensor. to_sparse_csr ( )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'dense=torch.randn(5,5)', 'sparse=dense.to_sparse_csr()', '', '', '']","Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    sparse=dense.to_sparse_csr()
AttributeError: 'Tensor' object has no attribute 'to_sparse_csr'
"
"
 Tensor. to_sparse_csc ( )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'dense=torch.randn(5,5)', 'sparse=dense.to_sparse_csc()', '', '']","Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    sparse=dense.to_sparse_csc()
AttributeError: 'Tensor' object has no attribute 'to_sparse_csc'
"
"
 Tensor. to_sparse_bsr ( blocksize )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'dense=torch.randn(10,10)', 'sparse=dense.to_sparse_csr()', 'sparse_bsr=sparse.to_sparse_bsr((5,5))', '', '', '']","Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    sparse=dense.to_sparse_csr()
AttributeError: 'Tensor' object has no attribute 'to_sparse_csr'
"
"
 Tensor. to_sparse_bsc ( blocksize )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'dense=torch.randn(10,10)', 'sparse=dense.to_sparse_csr()', 'sparse_bsc=sparse.to_sparse_bsc((5,5))', '', '']","Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    sparse=dense.to_sparse_csr()
AttributeError: 'Tensor' object has no attribute 'to_sparse_csr'
"
"
 torch.linalg. vander ( x ,  N )   → ¶","['import numpy as np', 'import numpy', 'import torch', 'x=torch.tensor([1,2,3,5])', 'torch.linalg.vander(x)', '', 'torch.linalg.vander(x,N=3)']","Traceback (most recent call last):
  File ""example.py"", line 5, in <module>
    torch.linalg.vander(x)
AttributeError: module 'torch.linalg' has no attribute 'vander'
"
